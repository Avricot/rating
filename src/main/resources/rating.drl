package rating

#list any import classes here.doo

import java.util.HashMap;
import java.util.Map;
import org.slf4j.LoggerFactory;
import org.avricot.rating.model.company.Company;
import org.avricot.rating.model.company.Sector;
import org.avricot.rating.model.rating.RatingProperty;
import org.avricot.rating.model.rating.RatingPropertyValue;
import org.avricot.rating.model.rating.Type;
import org.avricot.rating.service.rule.RuleHelper;
import function org.avricot.rating.service.rule.RuleHelper.get;
import function org.avricot.rating.service.rule.RuleHelper.getF;
import function org.avricot.rating.service.rule.RuleHelper.getGlobalValue;


#declare any global variables here;
global HashMap result;
global HashMap<String, Calc> prop;
global Sector sector;
global Company company;
global Map<Integer,RatingPropertyValue> vals;
global RuleHelper helper;


rule "Common rules"
	salience 100
when
	 eval(true)
then
	#moyenne sur ann√©e N et N-1 du CA
	result.put("REVENUES_AVG2", get(prop, "INCOME_SALES").avg(2));
	#recupere la valeur du fixed assets (non current) sur annee N
	result.put("FIXED_ASSETS", get(prop, "BALANCE_FIXED_ASSETS"));
	
	result.put("TOTAL_DEBT", get(prop, "BALANCE_LONG_TERM_DEBT").plus(get(prop, "BALANCE_SHORT_TERM_DEBT")));
	result.put("NET_DEBT", get(result, "TOTAL_DEBT").minus(get(prop, "BALANCE_CASH_EQUI")));
	result.put("NET_DEBT_OVER_EBITDA", get(result, "NET_DEBT").div(get(prop, "INCOME_EBITDA")));
	result.put("NET_DEBT_OVER_EBITDA_AVG2", get(result, "NET_DEBT_OVER_EBITDA").avg(2));
	
	result.put("FFO", get(prop, "CASH_FFO"));
	result.put("RCF", get(result, "FFO").minus(get(prop, "CASH_DIVIDEND_PAID")));
	
	
	result.put("SALES_GROWTH", get(prop, "INCOME_SALES").growth());
	result.put("GROSS_MARGIN", get(prop, "INCOME_SALES").minus(get(prop, "INCOME_COGS")));
	result.put("GROSS_MARGIN_PERCENT", get(result, "GROSS_MARGIN").div(get(prop, "INCOME_SALES")).mult(100));
	result.put("EBITDA_MARGIN_PERCENT", get(prop, "INCOME_EBITDA").div(get(prop, "INCOME_SALES")).mult(100));
	result.put("EBIT_MARGIN_PERCENT", get(prop, "INCOME_EBIT").div(get(prop, "INCOME_SALES")).mult(100));
	result.put("NET_INCOME_PERCENT", get(prop, "INCOME_NET_INCOME").div(get(prop, "INCOME_SALES")).mult(100));
	
	result.put("WORKING_CAPITAL", get(prop, "BALANCE_STOCKS_WIP").plus(get(prop, "BALANCE_RECEIVABLES")).minus(get(prop, "BALANCE_PAYABLES")));
	result.put("WORKING_CAPITAL_PERCENT", get(result, "WORKING_CAPITAL").div(get(prop, "INCOME_SALES")).mult(100));
	result.put("WORKING_CAPITAL_DAYS", get(result, "WORKING_CAPITAL").mult(company.getDayNumber()).div(get(prop, "INCOME_SALES")));
	
	result.put("INVENTORIES_DAYS", get(prop, "BALANCE_STOCKS_WIP").mult(company.getDayNumber()).div(get(prop, "INCOME_SALES")));
	result.put("RECEIVABLES_DAYS", get(prop, "BALANCE_RECEIVABLES").mult(company.getDayNumber()).div(get(prop, "INCOME_SALES")));
	result.put("PAYABLES_DAYS", get(prop, "BALANCE_PAYABLES").mult(company.getDayNumber()).div(get(prop, "INCOME_SALES")));
	
	result.put("TOTAL_DEBT_OVER_EBITDA", get(result, "TOTAL_DEBT").div(get(prop, "INCOME_EBITDA")));
	result.put("EBIT_OVER_INTEREST", get(prop, "INCOME_EBIT").div(get(prop, "INCOME_NET_INTEREST")));
	result.put("TOTAL_DEBT_OVER_EQUITY", get(result, "TOTAL_DEBT").div(get(prop, "BALANCE_EQUITY")).mult(100));
	result.put("TOTAL_DEBT_OVER_TOTAL_DEBT_OVER_EQUITY_INTERMEDIAIRE", get(result, "TOTAL_DEBT").plus(get(prop, "BALANCE_EQUITY")));
	result.put("TOTAL_DEBT_OVER_TOTAL_DEBT_OVER_EQUITY", get(result, "TOTAL_DEBT").div(get(result, "TOTAL_DEBT_OVER_TOTAL_DEBT_OVER_EQUITY_INTERMEDIAIRE")).mult(100));
	
	result.put("FFO_OVER_NET_DEBT", get(result, "FFO").div(get(result, "NET_DEBT")).mult(100));
	result.put("FFO_OVER_TOTAL_DEBT", get(result, "FFO").div(get(result, "TOTAL_DEBT")).mult(100));
	
	result.put("RCF_OVER_TOTAL_DEBT", get(result, "RCF").div(get(result, "TOTAL_DEBT")).mult(100));
	result.put("RCF_OVER_NET_DEBT", get(result, "RCF").div(get(result, "NET_DEBT")).mult(100));
	
	result.put("FCF", get(prop, "CASH_FCF"));
	result.put("FCF_ADJUSTED", get(result, "FCF").minus(get(prop, "CASH_DIVIDEND_PAID")));
	result.put("FCF_OVER_TOTAL_DEBT", get(result, "FCF").div(get(result, "TOTAL_DEBT")).mult(100));
	result.put("FCF_OVER_NET_DEBT", get(result, "FCF").div(get(result, "NET_DEBT")).mult(100));
	result.put("FCF_ADJUSTED_OVER_TOTAL_DEBT", get(result, "FCF_ADJUSTED").div(get(result, "TOTAL_DEBT")).mult(100));
	result.put("FCF_ADJUSTED_OVER_NET_DEBT", get(result, "FCF_ADJUSTED").div(get(result, "NET_DEBT")).mult(100));
	
	result.put("CASH_OVER_TOTAL_ASSETS", get(prop, "BALANCE_CASH_EQUI").div(get(prop, "BALANCE_TOTAL_ASSETS")).mult(100));
	result.put("CASH_OVER_FIXED_ASSETS", get(prop, "BALANCE_CASH_EQUI").div(get(prop, "BALANCE_FIXED_ASSETS")).mult(100));
	
	result.put("ROA", get(prop, "INCOME_NET_INCOME").div(get(prop, "BALANCE_TOTAL_ASSETS")).mult(100));
	result.put("ROE", get(prop, "INCOME_NET_INCOME").div(get(prop, "BALANCE_EQUITY")).mult(100));
	
	result.put("SALES", get(prop, "INCOME_SALES"));
	result.put("EBITDA", get(prop, "INCOME_EBITDA"));
	result.put("EBIT", get(prop, "INCOME_EBIT"));
	result.put("INTEREST", get(prop, "INCOME_NET_INTEREST"));
	result.put("NET_INCOME", get(prop, "INCOME_NET_INCOME"));
	result.put("CURRENT_RATIO", get(prop, "INCOME_NET_INCOME"));
	result.put("CASH_EQUI", get(prop, "BALANCE_CASH_EQUI"));
	result.put("EQUITY", get(prop, "BALANCE_EQUITY"));
	result.put("CURRENT_RATIO", get(prop, "BALANCE_CURRENT_ASSETS").div(get(prop, "BALANCE_CURRENT_LIABILITIES")));
	result.put("QUICK_RATIO", get(prop, "BALANCE_CURRENT_ASSETS").minus(get(prop, "BALANCE_STOCKS_WIP")).div(get(prop, "BALANCE_CURRENT_LIABILITIES")));
	result.put("CASH_RATIO", get(prop, "BALANCE_CASH_EQUI").div(get(prop, "BALANCE_CURRENT_LIABILITIES")));		

end


rule "test sector NMP"
when
	 eval(company.getSector().getName().equals("NMP"))
then
	result.put("NOTE8_FACTOR1_RELIANCE_MERCHANDISING", getGlobalValue(prop, "NMP_FACTOR1_RELIANCE_MERCHANDISING"));
	result.put("NOTE8_FACTOR1_RELIANCE_LARGEST_REGION", getGlobalValue(prop, "NMP_FACTOR1_RELIANCE_LARGEST_REGION"));
	result.put("NOTE8_FACTOR1_PRIMARY_MARKET_POSITION", getGlobalValue(prop, "NMP_FACTOR1_PRIMARY_MARKET_POSITION"));
	result.put("NOTE8_FACTOR1_GLOBAL_MARKET_POSITION", getGlobalValue(prop, "NMP_FACTOR1_GLOBAL_MARKET_POSITION"));
	result.put("NOTE8_FACTOR2_REVENUES", helper.getFork("REVENUES",getF(result,"REVENUES_AVG2")));
	result.put("NOTE8_FACTOR2_FIXED_ASSETS", helper.getFork("FIXED_ASSETS",get(prop,"BALANCE_FIXED_ASSETS").getLastYear()));
	result.put("NOTE8_FACTOR3_NET_DEBT_OVER_EBITDA", helper.getFork("NET_DEBT_OVER_EBITDA",get(result, "NET_DEBT_OVER_EBITDA").getLastYear()));
	result.put("NOTE8_FACTOR3_FFO_OVER_DEBT", helper.getFork("FFO_OVER_DEBT",get(result, "FFO_OVER_TOTAL_DEBT").getLastYear()));
	result.put("NOTE8_FACTOR3_RCF_OVER_NET_DEBT", helper.getFork("RCF_OVER_NET_DEBT",get(result, "RCF_OVER_NET_DEBT").getLastYear()));
	result.put("NOTE8_FACTOR4_FINANCIAL_POLICIES", getGlobalValue(prop, "NMP_FACTOR4_FINANCIAL_POLICIES"));
	result.put("NOTE8_FACTOR5_BUSINESS_RISK_PROFILE", getGlobalValue(prop, "NMP_FACTOR5_BUSINESS_RISK_PROFILE"));
		
	result.put("NOTE20_FACTOR1_RELIANCE_MERCHANDISING", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR1_RELIANCE_MERCHANDISING")));
	result.put("NOTE20_FACTOR1_RELIANCE_LARGEST_REGION", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR1_RELIANCE_LARGEST_REGION")));
	result.put("NOTE20_FACTOR1_PRIMARY_MARKET_POSITION", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR1_PRIMARY_MARKET_POSITION")));
	result.put("NOTE20_FACTOR1_GLOBAL_MARKET_POSITION", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR1_GLOBAL_MARKET_POSITION")));
	result.put("NOTE20_FACTOR2_REVENUES", helper.getIndice("CONVERT_8_20", result.get("NOTE8_FACTOR2_REVENUES")));
	result.put("NOTE20_FACTOR2_FIXED_ASSETS", helper.getIndice("CONVERT_8_20", result.get("NOTE8_FACTOR2_FIXED_ASSETS")));
	result.put("NOTE20_FACTOR3_NET_DEBT_OVER_EBITDA", helper.getIndice("CONVERT_8_20", result.get("NOTE8_FACTOR3_NET_DEBT_OVER_EBITDA")));
	result.put("NOTE20_FACTOR3_FFO_OVER_DEBT", helper.getIndice("CONVERT_8_20", result.get("NOTE8_FACTOR3_FFO_OVER_DEBT")));
	result.put("NOTE20_FACTOR3_RCF_OVER_NET_DEBT", helper.getIndice("CONVERT_8_20", result.get("NOTE8_FACTOR3_RCF_OVER_NET_DEBT")));
	result.put("NOTE20_FACTOR4_FINANCIAL_POLICIES", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR4_FINANCIAL_POLICIES")));
	result.put("NOTE20_FACTOR5_BUSINESS_RISK_PROFILE", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR5_BUSINESS_RISK_PROFILE")));
	
	result.put("NOTE20_FACTOR1_MARKET_POSITION_PONDEREE", (getF(result, "NOTE20_FACTOR1_RELIANCE_MERCHANDISING")*0.1F + getF(result, "NOTE20_FACTOR1_RELIANCE_LARGEST_REGION")*0.05F + getF(result, "NOTE20_FACTOR1_PRIMARY_MARKET_POSITION")*0.05F + getF(result, "NOTE20_FACTOR1_GLOBAL_MARKET_POSITION")*0.05F)/0.25F);
	result.put("NOTE20_FACTOR2_SCALE_PONDEREE", (getF(result, "NOTE20_FACTOR2_REVENUES")*0.1F + getF(result, "NOTE20_FACTOR2_FIXED_ASSETS")*0.05F)/0.15F);
	result.put("NOTE20_FACTOR3_LEVERAGE_PONDEREE", (getF(result, "NOTE20_FACTOR3_NET_DEBT_OVER_EBITDA")*0.1F + getF(result, "NOTE20_FACTOR3_FFO_OVER_DEBT")*0.05F + getF(result, "NOTE20_FACTOR3_RCF_OVER_NET_DEBT")*0.05F)/0.2F);
	result.put("NOTE20_FACTOR4_FINANCIAL_POLICIES_PONDEREE", getF(result, "NOTE20_FACTOR4_FINANCIAL_POLICIES"));
	result.put("NOTE20_FACTOR5_BUSINESS_RISK_PROFILE_PONDEREE", getF(result, "NOTE20_FACTOR5_BUSINESS_RISK_PROFILE"));
		
	result.put("NOTE_FINALE", (getF(result, "NOTE20_FACTOR1_MARKET_POSITION_PONDEREE") + getF(result, "NOTE20_FACTOR2_SCALE_PONDEREE")+ getF(result, "NOTE20_FACTOR3_LEVERAGE_PONDEREE")+getF(result, "NOTE20_FACTOR4_FINANCIAL_POLICIES_PONDEREE")+ getF(result, "NOTE20_FACTOR5_BUSINESS_RISK_PROFILE_PONDEREE"))/5F);
	result.put("NOTE_FINALE_STABILISEE", helper.getFork("EQUIVALENCE_AAA", getF(result, "NOTE_FINALE")).intValue());
		
	result.put("NMP_NOTE_FACTOR1_MARKET_POSITION_STABILISEE", helper.getFork("EQUIVALENCE_AAA_FACTORS", getF(result, "NOTE20_FACTOR1_MARKET_POSITION_PONDEREE")));
	result.put("NMP_NOTE_FACTOR2_SCALE_STABILISEE", helper.getFork("EQUIVALENCE_AAA_FACTORS", getF(result, "NOTE20_FACTOR2_SCALE_PONDEREE")));
	result.put("NMP_NOTE_FACTOR3_LEVERAGE_STABILISEE", helper.getFork("EQUIVALENCE_AAA_FACTORS", getF(result, "NOTE20_FACTOR3_LEVERAGE_PONDEREE")));
	result.put("NMP_NOTE_FACTOR4_FINANCIAL_POLICIES_STABILISEE", helper.getFork("EQUIVALENCE_AAA_FACTORS", getF(result, "NOTE20_FACTOR4_FINANCIAL_POLICIES_PONDEREE")));
	result.put("NMP_NOTE_FACTOR5_BUSINESS_RISK_PROFILE_STABILISEE", helper.getFork("EQUIVALENCE_AAA_FACTORS", getF(result, "NOTE20_FACTOR5_BUSINESS_RISK_PROFILE_PONDEREE"))); 
end

rule "test sector "
when
	 eval(company.getSector().getName().equals("ACO"))
then
	result.put("NOTE8_FACTOR1_SALES", helper.getFork("ACO_SALES",get(prop, "INCOME_SALES").getLastYear()));
	result.put("NOTE8_FACTOR1_GEO_DIV_SALES", getGlobalValue(prop, "ACO_FACTOR1_GEO_DIV_SALES_CONCENTRATION"));
	result.put("NOTE8_FACTOR1_GEO_DIV_RAW_MATERIAL", getGlobalValue(prop, "ACO_FACTOR1_GEO_DIV_RAW_MATERIAL"));
	result.put("NOTE8_FACTOR1_SEGMENTAL_DIVERSIFICATION", getGlobalValue(prop, "ACO_FACTOR1_SEGMENTAL_DIVERSIFICATION"));
	result.put("NOTE8_FACTOR2_MARKET_SHARE", getGlobalValue(prop, "ACO_FACTOR2_MARKET_SHARE"));
	result.put("NOTE8_FACTOR2_ORGANIC_VOLUME_GROWTH", getGlobalValue(prop, "ACO_FACTOR2_ORGANIC_VOLUME_GROWTH"));
	result.put("NOTE8_FACTOR2_QUALITATIVE_ASSESSMENT_OF_PORTFOLIO", getGlobalValue(prop, "ACO_FACTOR2_QUALITATIVE_ASSESSMENT_OF_PORTFOLIO"));
	result.put("NOTE8_FACTOR3_FINANCIAL_FLEXIBILITY", getGlobalValue(prop, "ACO_FACTOR3_FINANCIAL_FLEXIBILITY"));
	result.put("NOTE8_FACTOR4_FINANCIAL_STRATEGY", getGlobalValue(prop, "ACO_FACTOR4_FINANCIAL_STRATEGY"));
	result.put("NOTE8_FACTOR4_DEBT_OVER_EBITDA", helper.getFork("ACO_DEBT_OVER_EBITDA",get(result, "NET_DEBT_OVER_EBITDA").getLastYear()));
	result.put("NOTE8_FACTOR4_RCF_OVER_NET_DEBT", helper.getFork("ACO_RCF_OVER_NET_DEBT",get(result, "RCF_OVER_NET_DEBT").getLastYear()));
	result.put("NOTE8_FACTOR4_EBIT_OVER_INTEREST", helper.getFork("ACO_EBIT_OVER_INTEREST",get(prop, "EBIT_OVER_INTEREST").getLastYear()));
	result.put("NOTE8_FACTOR4_RCF_MINUS_CAPEX_OVER_DEBT", helper.getFork("ACO_RCF_MINUS_CAPEX_OVER_DEBT",get(prop, "RCF_MINUS_CAPEX_OVER_DEBT").getLastYear()));
	
	result.put("NOTE20_FACTOR1_SALES", helper.getIndice("CONVERT_8_20", result.get("NOTE8_FACTOR1_SALES")));
	result.put("NOTE20_FACTOR1_GEO_DIV_SALES", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR1_GEO_DIV_SALES")));
	result.put("NOTE20_FACTOR1_GEO_DIV_RAW_MATERIAL", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR1_GEO_DIV_RAW_MATERIAL")));
	result.put("NOTE20_FACTOR1_SEGMENTAL_DIVERSIFICATION", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR1_SEGMENTAL_DIVERSIFICATION")));
	result.put("NOTE20_FACTOR2_MARKET_SHARE", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR2_MARKET_SHARE")));
	result.put("NOTE20_FACTOR2_ORGANIC_VOLUME_GROWTH", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR2_ORGANIC_VOLUME_GROWTH")));
	result.put("NOTE20_FACTOR2_QUALITATIVE_ASSESSMENT_OF_PORTFOLIO", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR2_QUALITATIVE_ASSESSMENT_OF_PORTFOLIO")));
	result.put("NOTE20_FACTOR3_FINANCIAL_FLEXIBILITY", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR3_FINANCIAL_FLEXIBILITY")));
	result.put("NOTE20_FACTOR4_FINANCIAL_STRATEGY", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR4_FINANCIAL_STRATEGY")));
	result.put("NOTE20_FACTOR4_DEBT_OVER_EBITDA", helper.getIndice("CONVERT_8_20", result.get("NOTE8_FACTOR4_DEBT_OVER_EBITDA")));
	result.put("NOTE20_FACTOR4_RCF_OVER_NET_DEBT", helper.getIndice("CONVERT_8_20", result.get("NOTE8_FACTOR4_RCF_OVER_NET_DEBT")));
	result.put("NOTE20_FACTOR4_EBIT_OVER_INTEREST", helper.getIndice("CONVERT_8_20", result.get("NOTE8_FACTOR4_EBIT_OVER_INTEREST")));
	result.put("NOTE20_FACTOR4_RCF_MINUS_CAPEX_OVER_DEBT", helper.getIndice("CONVERT_8_20", result.get("NOTE8_FACTOR4_RCF_MINUS_CAPEX_OVER_DEBT")));
	
	result.put("NOTE20_FACTOR1_SCALE_DIVERSIFICATION_PONDEREE", (getF(result, "NOTE20_FACTOR1_SALES")*0.05F + getF(result, "NOTE20_FACTOR1_GEO_DIV_SALES")*0.05F + getF(result, "NOTE20_FACTOR1_GEO_DIV_RAW_MATERIAL")*0.05F + getF(result, "NOTE20_FACTOR1_SEGMENTAL_DIVERSIFICATION")*0.1F)/0.25F);
	result.put("NOTE20_FACTOR2_FRANCHISE_STRENGTH_GROWTH_POTENTIAL_PONDEREE", (getF(result, "NOTE20_FACTOR2_MARKET_SHARE")*0.05F + getF(result, "NOTE20_FACTOR2_ORGANIC_VOLUME_GROWTH")*0.05F + getF(result, "NOTE20_FACTOR2_QUALITATIVE_ASSESSMENT_OF_PORTFOLIO")*0.1F)/0.2F);
	result.put("NOTE20_FACTOR3_FINANCIAL_FLEXIBILITY_PONDEREE", getF(result, "NOTE20_FACTOR3_FINANCIAL_FLEXIBILITY"));
	result.put("NOTE20_FACTOR4_FINANCIAL_STRATEGY_CREDIT_METRICS_PONDEREE", (getF(result, "NOTE20_FACTOR4_FINANCIAL_STRATEGY")*0.05F + getF(result, "NOTE20_FACTOR4_DEBT_OVER_EBITDA")*0.1F + getF(result, "NOTE20_FACTOR4_RCF_OVER_NET_DEBT")*0.1F + getF(result, "NOTE20_FACTOR4_EBIT_OVER_INTEREST")*0.1F + getF(result, "NOTE20_FACTOR4_RCF_MINUS_CAPEX_OVER_DEBT")*0.1F)/0.45F);
			
	result.put("NOTE_FINALE", (getF(result, "NOTE20_FACTOR1_SCALE_DIVERSIFICATION_PONDEREE") + getF(result, "NOTE20_FACTOR2_FRANCHISE_STRENGTH_GROWTH_POTENTIAL_PONDEREE")+ getF(result, "NOTE20_FACTOR3_FINANCIAL_FLEXIBILITY_PONDEREE")+getF(result, "NOTE20_FACTOR4_FINANCIAL_STRATEGY_CREDIT_METRICS_PONDEREE"))/4F);
	result.put("NOTE_FINALE_STABILISEE", helper.getFork("EQUIVALENCE_AAA", getF(result, "NOTE_FINALE")).intValue());

	result.put("ACO_NOTE_FACTOR1_SCALE_AND_DIVERSIFICATION", helper.getFork("EQUIVALENCE_AAA_FACTORS", getF(result, "NOTE20_FACTOR1_SCALE_DIVERSIFICATION_PONDEREE")));
	result.put("ACO_NOTE_FACTOR2_FRANCHISE_STRENGTH_GROCTH_POTENTIAL", helper.getFork("EQUIVALENCE_AAA_FACTORS", getF(result, "NOTE20_FACTOR2_FRANCHISE_STRENGTH_GROWTH_POTENTIAL_PONDEREE")));
	result.put("ACO_NOTE_FACTOR3_FINANCIAL_FLEXIBILITY", helper.getFork("EQUIVALENCE_AAA_FACTORS", getF(result, "NOTE20_FACTOR3_FINANCIAL_FLEXIBILITY_PONDEREE")));
	result.put("ACO_NOTE_FACTOR4_FINANCIAL_STRATEGY_AND_CREDIT_METRICS", helper.getFork("EQUIVALENCE_AAA_FACTORS", getF(result, "NOTE20_FACTOR4_FINANCIAL_STRATEGY_CREDIT_METRICS_PONDEREE")));
end


rule "sector PIM"
when
	 eval(company.getSector().getName().equals("PIM"))
then
	result.put("NOTE8_FACTOR1_RELATIVE_MARKET_SHARE", getGlobalValue(prop, "PIM_FACTOR1_RELATIVE_MARKET_SHARE"));
	result.put("NOTE8_FACTOR1_GEO_DIV", getGlobalValue(prop, "PIM_FACTOR1_GEO_DIV"));
	result.put("NOTE8_FACTOR1_PRODUCT_LINE_PRICE_POINT_DIV", getGlobalValue(prop, "PIM_FACTOR1_PRODUCT_LINE_PRICE_POINT_DIV"));
	result.put("NOTE8_FACTOR2_GROSS_MARGIN", helper.getFork("PIM_GROSS_MARGIN",get(result, "GROSS_MARGIN").getLastYear()));
	result.put("NOTE8_FACTOR2_RETURN_ON_ASSETS", helper.getFork("PIM_RETURN_ON_ASSETS",get(result, "ROA").getLastYear()));
	result.put("NOTE8_FACTOR3_DEBT_OVER_EQUITY", helper.getFork("PIM_DEBT_OVER_EQUITY",get(result, "TOTAL_DEBT_OVER_EQUITY").getLastYear()));
	result.put("NOTE8_FACTOR4_FCF_OVER_TOTAL_DEBT", helper.getFork("PIM_FCF_OVER_TOTAL_DEBT",get(result, "FCF_OVER_TOTAL_DEBT").getLastYear()));
	result.put("NOTE8_FACTOR4_FFO_OVER_TOTAL_DEBT", helper.getFork("PIM_FFO_OVER_TOTAL_DEBT",get(result, "FFO_OVER_TOTAL_DEBT").getLastYear()));
	result.put("NOTE8_FACTOR4_EBIT_OVER_INTEREST", helper.getFork("PIM_EBIT_OVER_INTEREST",get(result, "EBIT_OVER_INTEREST").getLastYear()));
	result.put("NOTE8_FACTOR4_SALES", getGlobalValue(prop, "PIM_FACTOR4_SALES"));
	result.put("NOTE8_FACTOR4_TANGIBLES_NET_WORTH", helper.getFork("PIM_TANGIBLES_NET_WORTH",get(result, "TANGIBLES_NET_WORTH").getLastYear()));
	result.put("NOTE8_FACTOR5_CASH_FLOW_INTERNAL_SOURCES_LIQUIDITY", getGlobalValue(prop, "PIM_FACTOR5_CASH_FLOW_INTERNAL_SOURCES_LIQUIDITY"));
	result.put("NOTE8_FACTOR5_AVAILABILITY_EXTERNAL_SOURCES_LIQUIDITY", getGlobalValue(prop, "PIM_FACTOR5_AVAILABILITY_EXTERNAL_SOURCES_LIQUIDITY"));
	result.put("NOTE8_FACTOR5_CONVENANTS_ALTERNATE_LIQUIDITY", getGlobalValue(prop, "PIM_FACTOR5_CONVENANTS_ALTERNATE_LIQUIDITY"));
	result.put("NOTE8_FACTOR6_NB_YRS_TOTAL_LOTS", getGlobalValue(prop, "PIM_FACTOR6_NB_YRS_TOTAL_LOTS"));
	result.put("NOTE8_FACTOR6_NB_YRS_OWNED_LOTS", getGlobalValue(prop, "PIM_FACTOR6_NB_YRS_OWNED_LOTS"));
	result.put("NOTE8_FACTOR6_SPEC_BUILDING_PERCENTAGE", getGlobalValue(prop, "PIM_FACTOR6_SPEC_BUILDING_PERCENTAGE"));
	
	result.put("NOTE20_FACTOR1_RELATIVE_MARKET_SHARE", helper.getIndice("CONVERT_8_20", result.get("NOTE8_FACTOR1_RELATIVE_MARKET_SHARE")));
	result.put("NOTE20_FACTOR1_GEO_DIV", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR1_GEO_DIV")));
	result.put("NOTE20_FACTOR1_PRODUCT_LINE_PRICE_POINT_DIV", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR1_PRODUCT_LINE_PRICE_POINT_DIV")));
	result.put("NOTE20_FACTOR2_GROSS_MARGIN", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR2_GROSS_MARGIN")));
	result.put("NOTE20_FACTOR2_RETURN_ON_ASSETS", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR2_RETURN_ON_ASSETS")));
	result.put("NOTE20_FACTOR3_DEBT_OVER_EQUITY", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR3_DEBT_OVER_EQUITY")));
	result.put("NOTE20_FACTOR4_FCF_OVER_TOTAL_DEBT", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR4_FCF_OVER_TOTAL_DEBT")));
	result.put("NOTE20_FACTOR4_FFO_OVER_TOTAL_DEBT", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR4_FFO_OVER_TOTAL_DEBT")));
	result.put("NOTE20_FACTOR4_EBIT_OVER_INTEREST", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR4_EBIT_OVER_INTEREST")));
	result.put("NOTE20_FACTOR4_SALES", helper.getIndice("CONVERT_8_20", result.get("NOTE8_FACTOR4_SALES")));
	result.put("NOTE20_FACTOR4_TANGIBLES_NET_WORTH", helper.getIndice("CONVERT_8_20", result.get("NOTE8_FACTOR4_TANGIBLES_NET_WORTH")));
	result.put("NOTE20_FACTOR5_CASH_FLOW_INTERNAL_SOURCES_LIQUIDITY", helper.getIndice("CONVERT_8_20", result.get("NOTE8_FACTOR5_CASH_FLOW_INTERNAL_SOURCES_LIQUIDITY")));
	result.put("NOTE20_FACTOR5_AVAILABILITY_EXTERNAL_SOURCES_LIQUIDITY", helper.getIndice("CONVERT_8_20", result.get("NOTE8_FACTOR5_AVAILABILITY_EXTERNAL_SOURCES_LIQUIDITY")));
	result.put("NOTE20_FACTOR5_CONVENANTS_ALTERNATE_LIQUIDITY", helper.getIndice("CONVERT_8_20", result.get("NOTE8_FACTOR5_CONVENANTS_ALTERNATE_LIQUIDITY")));
	result.put("NOTE20_FACTOR6_NB_YRS_TOTAL_LOTS", helper.getIndice("CONVERT_8_20", result.get("NOTE8_FACTOR6_NB_YRS_TOTAL_LOTS")));
	result.put("NOTE20_FACTOR6_NB_YRS_OWNED_LOTS", helper.getIndice("CONVERT_8_20", result.get("NOTE8_FACTOR6_NB_YRS_OWNED_LOTS")));
	result.put("NOTE20_FACTOR6_SPEC_BUILDING_PERCENTAGE", helper.getIndice("CONVERT_8_20", result.get("NOTE8_FACTOR6_SPEC_BUILDING_PERCENTAGE")));
	
	result.put("NOTE20_FACTOR1_COMPETITIVE_POSITION_AND_DIVERSIFITY_PONDEREE", (getF(result, "NOTE20_FACTOR1_RELATIVE_MARKET_SHARE")*0.05F + getF(result, "NOTE20_FACTOR1_GEO_DIV")*0.05F + getF(result, "NOTE20_FACTOR1_PRODUCT_LINE_PRICE_POINT_DIV")*0.05F)/0.15F);
	result.put("NOTE20_FACTOR2_OPERATING_EFFICIENCY_PONDEREE", (getF(result, "NOTE20_FACTOR2_GROSS_MARGIN")*0.05F + getF(result, "NOTE20_FACTOR2_RETURN_ON_ASSETS")*0.05F)/0.1F);
	result.put("NOTE20_FACTOR3_CAPITAL_STRUCTURE_PONDEREE", getF(result, "NOTE20_FACTOR3_DEBT_OVER_EQUITY"));
	result.put("NOTE20_FACTOR4_FINANCIAL_STRENGHT_PONDEREE", (getF(result, "NOTE20_FACTOR4_FCF_OVER_TOTAL_DEBT")*0.05F + getF(result, "NOTE20_FACTOR4_FFO_OVER_TOTAL_DEBT")*0.05F + getF(result, "NOTE20_FACTOR4_EBIT_OVER_INTEREST")*0.1F + getF(result, "NOTE20_FACTOR4_SALES")*0.05F + getF(result, "NOTE20_FACTOR4_TANGIBLES_NET_WORTH")*0.05F)/0.3F);
	result.put("NOTE20_FACTOR5_BUSINESS_RISK_PONDEREE", (getF(result, "NOTE20_FACTOR5_CASH_FLOW_INTERNAL_SOURCES_LIQUIDITY")*0.05F + getF(result, "NOTE20_FACTOR5_AVAILABILITY_EXTERNAL_SOURCES_LIQUIDITY")*0.05F + getF(result, "NOTE20_FACTOR5_CONVENANTS_ALTERNATE_LIQUIDITY")*0.05F)/0.15F);
	result.put("NOTE20_FACTOR6_FACTOR6_OPERATING_RISK_PONDEREE", (getF(result, "NOTE20_FACTOR6_NB_YRS_TOTAL_LOTS")*0.04F + getF(result, "NOTE20_FACTOR6_NB_YRS_OWNED_LOTS")*0.04F + getF(result, "NOTE20_FACTOR6_SPEC_BUILDING_PERCENTAGE")*0.07F)/0.15F);
			
	result.put("NOTE_FINALE", (getF(result, "NOTE20_FACTOR1_COMPETITIVE_POSITION_AND_DIVERSIFITY_PONDEREE") + getF(result, "NOTE20_FACTOR2_OPERATING_EFFICIENCY_PONDEREE")+ getF(result, "NOTE20_FACTOR3_CAPITAL_STRUCTURE_PONDEREE")+getF(result, "NOTE20_FACTOR4_FINANCIAL_STRENGHT_PONDEREE")+getF(result, "NOTE20_FACTOR5_BUSINESS_RISK_PONDEREE")+getF(result, "NOTE20_FACTOR6_FACTOR6_OPERATING_RISK_PONDEREE"))/6F);
	result.put("NOTE_FINALE_STABILISEE", helper.getFork("EQUIVALENCE_AAA", getF(result, "NOTE_FINALE")).intValue());
		
	result.put("PIM_NOTE_FACTOR1_COMPETITIVE_POSITION_AND_DIVERSIFITY", helper.getFork("EQUIVALENCE_AAA_FACTORS", getF(result, "NOTE20_FACTOR1_COMPETITIVE_POSITION_AND_DIVERSIFITY_PONDEREE")));
	result.put("PIM_NOTE_FACTOR2_OPERATING_EFFICIENCY", helper.getFork("EQUIVALENCE_AAA_FACTORS", getF(result, "NOTE20_FACTOR2_OPERATING_EFFICIENCY_PONDEREE")));
	result.put("PIM_NOTE_FACTOR3_CAPITAL_STRUCTURE", helper.getFork("EQUIVALENCE_AAA_FACTORS", getF(result, "NOTE20_FACTOR3_CAPITAL_STRUCTURE_PONDEREE")));
	result.put("PIM_NOTE_FACTOR4_FINANCIAL_STRENGHT", helper.getFork("EQUIVALENCE_AAA_FACTORS", getF(result, "NOTE20_FACTOR4_FINANCIAL_STRENGHT_PONDEREE")));
	result.put("PIM_NOTE_FACTOR5_BUSINESS_RISK", helper.getFork("EQUIVALENCE_AAA_FACTORS", getF(result, "NOTE20_FACTOR5_BUSINESS_RISK_PONDEREE")));
	result.put("PIM_NOTE_FACTOR6_OPERATING_RISK", helper.getFork("EQUIVALENCE_AAA_FACTORS", getF(result, "NOTE20_FACTOR6_FACTOR6_OPERATING_RISK_PONDEREE")));	
end


rule "test sector TDI"
when
	eval(company.getSector().getName().equals("TDI"))
then
	result.put("NOTE8_FACTOR1_SALES", helper.getFork("TDI_SALES",get(prop, "INCOME_SALES").getLastYear()));
	result.put("NOTE8_FACTOR1_BUSINESS_MODEL", getGlobalValue(prop, "TDI_FACTOR1_BUSINESS_MODEL"));
	result.put("NOTE8_FACTOR2_REGULATORY_POLITICAL", getGlobalValue(prop, "TDI_FACTOR2_REGULATORY_POLITICAL"));
	result.put("NOTE8_FACTOR2_MARKET_SHARE", getGlobalValue(prop, "TDI_FACTOR2_MARKET_SHARE"));
	result.put("NOTE8_FACTOR3_FINANCIAL_POLICY", getGlobalValue(prop, "TDI_FACTOR3_FINANCIAL_POLICY"));
	result.put("NOTE8_FACTOR4_EBITDA_MARGIN", helper.getFork("TDI_EBITDA_MARGIN",get(result, "EBITDA_MARGIN_PERCENT").getLastYear()));
	result.put("NOTE8_FACTOR5_DEBT_OVER_EBITDA", helper.getFork("TDI_DEBT_OVER_EBITDA",get(result, "TOTAL_DEBT_OVER_EBITDA").getLastYear()));
	result.put("NOTE8_FACTOR5_FCF_OVER_TOTAL_DEBT", helper.getFork("TDI_FCF_OVER_TOTAL_DEBT",get(result, "FCF_OVER_TOTAL_DEBT").getLastYear()));
	result.put("NOTE8_FACTOR5_RCF_OVER_TOTAL_DEBT", helper.getFork("TDI_RCF_OVER_TOTAL_DEBT",get(result, "RCF_OVER_TOTAL_DEBT").getLastYear()));
	result.put("NOTE8_FACTOR5_FFO_PLUS_INTEREST_EXPENSES_OVER_INTEREST_EXPENSES", helper.getFork("TDI_FFO_PLUS_INTEREST_EXPENSES_OVER_INTEREST_EXPENSES", get(result, "FFO_PLUS_INTEREST_EXPENSES_OVER_INTEREST_EXPENSES").getLastYear()));
	result.put("NOTE8_FACTOR5_EBITDA_MINUS_CAPX_OVER_INTEREST_EXPENSES", helper.getFork("TDI_EBITDA_MINUS_CAPX_OVER_INTEREST_EXPENSES", get(result, "EBITDA_MINUS_CAPX_OVER_INTEREST_EXPENSES").getLastYear()));
	
	result.put("NOTE20_FACTOR1_SALES", helper.getIndice("CONVERT_8_20", result.get("NOTE8_FACTOR1_SALES")));
	result.put("NOTE20_FACTOR1_BUSINESS_MODEL", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR1_BUSINESS_MODEL")));
	result.put("NOTE20_FACTOR2_REGULATORY_POLITICAL", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR2_REGULATORY_POLITICAL")));
	result.put("NOTE20_FACTOR2_MARKET_SHARE", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR2_MARKET_SHARE")));
	result.put("NOTE20_FACTOR3_FINANCIAL_POLICY", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR3_FINANCIAL_POLICY")));
	result.put("NOTE20_FACTOR4_EBITDA_MARGIN", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR4_EBITDA_MARGIN")));
	result.put("NOTE20_FACTOR5_DEBT_OVER_EBITDA", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR5_DEBT_OVER_EBITDA")));
	result.put("NOTE20_FACTOR5_FCF_OVER_TOTAL_DEBT", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR5_FCF_OVER_TOTAL_DEBT")));
	result.put("NOTE20_FACTOR5_RCF_OVER_TOTAL_DEBT", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR5_RCF_OVER_TOTAL_DEBT")));
	result.put("NOTE20_FACTOR5_FFO_PLUS_INTEREST_EXPENSES_OVER_INTEREST_EXPENSES", helper.getIndice("CONVERT_8_20", result.get("NOTE8_FACTOR5_FFO_PLUS_INTEREST_EXPENSES_OVER_INTEREST_EXPENSES")));
	result.put("NOTE20_FACTOR5_EBITDA_MINUS_CAPX_OVER_INTEREST_EXPENSES", helper.getIndice("CONVERT_8_20", result.get("NOTE8_FACTOR5_EBITDA_MINUS_CAPX_OVER_INTEREST_EXPENSES")));
	
	result.put("NOTE20_FACTOR1_SCALE_BUSINESS_MODEL_PONDEREE", (getF(result, "NOTE20_FACTOR1_SALES")*0.12F + getF(result, "NOTE20_FACTOR1_BUSINESS_MODEL")*0.15F)/0.27F);
	result.put("NOTE20_FACTOR2_OPERATING_ENVIRONMENT_PONDEREE", (getF(result, "NOTE20_FACTOR2_REGULATORY_POLITICAL")*0.08F + getF(result, "NOTE20_FACTOR2_MARKET_SHARE")*0.08F)/0.16F);
	result.put("NOTE20_FACTOR3_FINANCIAL_POLICY_PONDEREE", getF(result, "NOTE20_FACTOR3_FINANCIAL_POLICY"));
	result.put("NOTE20_FACTOR4_OPERATING_PERFORMANCE_PONDEREE", getF(result, "NOTE20_FACTOR4_EBITDA_MARGIN"));
	result.put("NOTE20_FACTOR5_FINANCIAL_STRENGTH_PONDEREE", (getF(result, "NOTE20_FACTOR5_DEBT_OVER_EBITDA")*0.09F + getF(result, "NOTE20_FACTOR5_FCF_OVER_TOTAL_DEBT")*0.07F + getF(result, "NOTE20_FACTOR5_RCF_OVER_TOTAL_DEBT")*0.1F + getF(result, "NOTE20_FACTOR5_FFO_PLUS_INTEREST_EXPENSES_OVER_INTEREST_EXPENSES")*0.13F + getF(result, "NOTE20_FACTOR5_EBITDA_MINUS_CAPX_OVER_INTEREST_EXPENSES")*0.08F)/0.47F);
			
	result.put("NOTE_FINALE", (getF(result, "NOTE20_FACTOR1_SCALE_BUSINESS_MODEL_PONDEREE") + getF(result, "NOTE20_FACTOR2_OPERATING_ENVIRONMENT_PONDEREE")+ getF(result, "NOTE20_FACTOR3_FINANCIAL_POLICY_PONDEREE")+getF(result, "NOTE20_FACTOR4_OPERATING_PERFORMANCE_PONDEREE")+getF(result, "NOTE20_FACTOR5_FINANCIAL_STRENGTH_PONDEREE"))/5F);
	result.put("NOTE_FINALE_STABILISEE", helper.getFork("EQUIVALENCE_AAA", getF(result, "NOTE_FINALE")).intValue());
	
	result.put("TDI_NOTE_FACTOR1_SCALE_BUSINESS_MODEL", helper.getFork("EQUIVALENCE_AAA_FACTORS", getF(result, "NOTE20_FACTOR1_SCALE_BUSINESS_MODEL_PONDEREE")));
	result.put("TDI_NOTE_FACTOR2_OPERATING_ENVIRONNEMENT", helper.getFork("EQUIVALENCE_AAA_FACTORS", getF(result, "NOTE20_FACTOR2_OPERATING_ENVIRONMENT_PONDEREE")));
	result.put("TDI_NOTE_FACTOR3_FINANCIAL_POLICY", helper.getFork("EQUIVALENCE_AAA_FACTORS", getF(result, "NOTE20_FACTOR3_FINANCIAL_POLICY_PONDEREE")));
	result.put("TDI_NOTE_FACTOR4_OPERATING_PERFORMANCE", helper.getFork("EQUIVALENCE_AAA_FACTORS", getF(result, "NOTE20_FACTOR4_OPERATING_PERFORMANCE_PONDEREE")));
	result.put("TDI_NOTE_FACTOR5_FINANCIAL_STRENGTH", helper.getFork("EQUIVALENCE_AAA_FACTORS", getF(result, "NOTE20_FACTOR5_FINANCIAL_STRENGTH_PONDEREE")));
end


rule "test sector TWI"
when
	eval(company.getSector().getName().equals("TWI"))
then
	result.put("NOTE8_FACTOR1_SALES", helper.getFork("TWI_SALES",get(prop, "INCOME_SALES").getLastYear()));
	result.put("NOTE8_FACTOR1_BUSINESS_MODEL", getGlobalValue(prop, "TWI_FACTOR1_BUSINESS_MODEL"));
	result.put("NOTE8_FACTOR2_REGULATORY_POLITICAL", getGlobalValue(prop, "TWI_FACTOR2_REGULATORY_POLITICAL"));
	result.put("NOTE8_FACTOR2_MARKET_SHARE", getGlobalValue(prop, "TWI_FACTOR2_MARKET_SHARE"));
	result.put("NOTE8_FACTOR3_FINANCIAL_POLICY", getGlobalValue(prop, "TWI_FACTOR3_FINANCIAL_POLICY"));
	result.put("NOTE8_FACTOR4_EBITDA_MARGIN", helper.getFork("TWI_EBITDA_MARGIN",get(result, "EBITDA_MARGIN_PERCENT").getLastYear()));
	result.put("NOTE8_FACTOR5_DEBT_OVER_EBITDA", helper.getFork("TWI_DEBT_OVER_EBITDA",get(result, "TOTAL_DEBT_OVER_EBITDA").getLastYear()));
	result.put("NOTE8_FACTOR5_FCF_OVER_TOTAL_DEBT", helper.getFork("TWI_FCF_OVER_TOTAL_DEBT",get(result, "FCF_OVER_TOTAL_DEBT").getLastYear()));
	result.put("NOTE8_FACTOR5_RCF_OVER_TOTAL_DEBT", helper.getFork("TWI_RCF_OVER_TOTAL_DEBT",get(result, "RCF_OVER_TOTAL_DEBT").getLastYear()));
	result.put("NOTE8_FACTOR5_FFO_PLUS_INTEREST_EXPENSES_OVER_INTEREST_EXPENSES", helper.getFork("TWI_FFO_PLUS_INTEREST_EXPENSES_OVER_INTEREST_EXPENSES", get(result, "FFO_PLUS_INTEREST_EXPENSES_OVER_INTEREST_EXPENSES").getLastYear()));
	result.put("NOTE8_FACTOR5_EBITDA_MINUS_CAPX_OVER_INTEREST_EXPENSES", helper.getFork("TWI_EBITDA_MINUS_CAPX_OVER_INTEREST_EXPENSES", get(result, "EBITDA_MINUS_CAPX_OVER_INTEREST_EXPENSES").getLastYear()));
	
	result.put("NOTE20_FACTOR1_SALES", helper.getIndice("CONVERT_8_20", result.get("NOTE8_FACTOR1_SALES")));
	result.put("NOTE20_FACTOR1_BUSINESS_MODEL", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR1_BUSINESS_MODEL")));
	result.put("NOTE20_FACTOR2_REGULATORY_POLITICAL", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR2_REGULATORY_POLITICAL")));
	result.put("NOTE20_FACTOR2_MARKET_SHARE", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR2_MARKET_SHARE")));
	result.put("NOTE20_FACTOR3_FINANCIAL_POLICY", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR3_FINANCIAL_POLICY")));
	result.put("NOTE20_FACTOR4_EBITDA_MARGIN", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR4_EBITDA_MARGIN")));
	result.put("NOTE20_FACTOR5_DEBT_OVER_EBITDA", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR5_DEBT_OVER_EBITDA")));
	result.put("NOTE20_FACTOR5_FCF_OVER_TOTAL_DEBT", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR5_FCF_OVER_TOTAL_DEBT")));
	result.put("NOTE20_FACTOR5_RCF_OVER_TOTAL_DEBT", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR5_RCF_OVER_TOTAL_DEBT")));
	result.put("NOTE20_FACTOR5_FFO_PLUS_INTEREST_EXPENSES_OVER_INTEREST_EXPENSES", helper.getIndice("CONVERT_8_20", result.get("NOTE8_FACTOR5_FFO_PLUS_INTEREST_EXPENSES_OVER_INTEREST_EXPENSES")));
	result.put("NOTE20_FACTOR5_EBITDA_MINUS_CAPX_OVER_INTEREST_EXPENSES", helper.getIndice("CONVERT_8_20", result.get("NOTE8_FACTOR5_EBITDA_MINUS_CAPX_OVER_INTEREST_EXPENSES")));
	
	result.put("NOTE20_FACTOR1_SCALE_BUSINESS_MODEL_PONDEREE", (getF(result, "NOTE20_FACTOR1_SALES")*0.12F + getF(result, "NOTE20_FACTOR1_BUSINESS_MODEL")*0.15F)/0.27F);
	result.put("NOTE20_FACTOR2_OPERATING_ENVIRONMENT_PONDEREE", (getF(result, "NOTE20_FACTOR2_REGULATORY_POLITICAL")*0.08F + getF(result, "NOTE20_FACTOR2_MARKET_SHARE")*0.08F)/0.16F);
	result.put("NOTE20_FACTOR3_FINANCIAL_POLICY_PONDEREE", getF(result, "NOTE20_FACTOR3_FINANCIAL_POLICY"));
	result.put("NOTE20_FACTOR4_OPERATING_PERFORMANCE_PONDEREE", getF(result, "NOTE20_FACTOR4_EBITDA_MARGIN"));
	result.put("NOTE20_FACTOR5_FINANCIAL_STRENGTH_PONDEREE", (getF(result, "NOTE20_FACTOR5_DEBT_OVER_EBITDA")*0.09F + getF(result, "NOTE20_FACTOR5_FCF_OVER_TOTAL_DEBT")*0.07F + getF(result, "NOTE20_FACTOR5_RCF_OVER_TOTAL_DEBT")*0.1F + getF(result, "NOTE20_FACTOR5_FFO_PLUS_INTEREST_EXPENSES_OVER_INTEREST_EXPENSES")*0.13F + getF(result, "NOTE20_FACTOR5_EBITDA_MINUS_CAPX_OVER_INTEREST_EXPENSES")*0.08F)/0.47F);
			
	result.put("NOTE_FINALE", (getF(result, "NOTE20_FACTOR1_SCALE_BUSINESS_MODEL_PONDEREE") + getF(result, "NOTE20_FACTOR2_OPERATING_ENVIRONMENT_PONDEREE")+ getF(result, "NOTE20_FACTOR3_FINANCIAL_POLICY_PONDEREE")+getF(result, "NOTE20_FACTOR4_OPERATING_PERFORMANCE_PONDEREE")+getF(result, "NOTE20_FACTOR5_FINANCIAL_STRENGTH_PONDEREE"))/5F);
	result.put("NOTE_FINALE_STABILISEE", helper.getFork("EQUIVALENCE_AAA", getF(result, "NOTE_FINALE")).intValue());
		
	result.put("TWI_NOTE_FACTOR1_SCALE_BUSINESS_MODEL", helper.getFork("EQUIVALENCE_AAA_FACTORS", getF(result, "NOTE20_FACTOR1_SCALE_BUSINESS_MODEL_PONDEREE")));
	result.put("TWI_NOTE_FACTOR2_OPERATING_ENVIRONNEMENT", helper.getFork("EQUIVALENCE_AAA_FACTORS", getF(result, "NOTE20_FACTOR2_OPERATING_ENVIRONMENT_PONDEREE")));
	result.put("TWI_NOTE_FACTOR3_FINANCIAL_POLICY", helper.getFork("EQUIVALENCE_AAA_FACTORS", getF(result, "NOTE20_FACTOR3_FINANCIAL_POLICY_PONDEREE")));
	result.put("TWI_NOTE_FACTOR4_OPERATING_PERFORMANCE", helper.getFork("EQUIVALENCE_AAA_FACTORS", getF(result, "NOTE20_FACTOR4_OPERATING_PERFORMANCE_PONDEREE")));
	result.put("TWI_NOTE_FACTOR5_FINANCIAL_STRENGTH", helper.getFork("EQUIVALENCE_AAA_FACTORS", getF(result, "NOTE20_FACTOR5_FINANCIAL_STRENGTH_PONDEREE")));
end

rule "test sector SHI"
when
	eval(company.getSector().getName().equals("SHI"))
then
	result.put("NOTE8_FACTOR1_SALES", helper.getFork("SHI_SALES",get(prop, "INCOME_SALES").getLastYear()));
	result.put("NOTE8_FACTOR1_SIZE_OF_FLEET", getGlobalValue(prop, "SHI_FACTOR1_SIZE_OF_FLEET"));
	result.put("NOTE8_FACTOR2_FLEET_AGE", getGlobalValue(prop, "SHI_FACTOR2_FLEET_AGE"));
	result.put("NOTE8_FACTOR2_EBIT_MARGIN", helper.getFork("SHI_EBIT_MARGIN",get(result, "EBIT_MARGIN_PERCENT").getLastYear()));
	result.put("NOTE8_FACTOR3_RCF_OVER_NET_DEBT", helper.getFork("SHI_RCF_OVER_NET_DEBT",get(result, "RCF_OVER_NET_DEBT").getLastYear()));
	result.put("NOTE8_FACTOR3_ROA", helper.getFork("SHI_ROA",get(result, "ROA").getLastYear()));
	result.put("NOTE8_FACTOR3_LONG_TERM_CONTRACTS", getGlobalValue(prop, "SHI_FACTOR3_LONG_TERM_CONTRACTS"));
	result.put("NOTE8_FACTOR4_DEBT_OVER_EBITDA", helper.getFork("SHI_DEBT_OVER_EBITDA",get(result, "TOTAL_DEBT_OVER_EBITDA").getLastYear()));
	result.put("NOTE8_FACTOR4_EBIT_OVER_INTERESTS", helper.getFork("SHI_EBIT_OVER_INTERESTS",get(result, "EBIT_OVER_INTEREST").getLastYear()));
	result.put("NOTE8_FACTOR5_FCF_OVER_TOTAL_DEBT", helper.getFork("SHI_FCF_OVER_TOTAL_DEBT",get(result, "FCF_OVER_TOTAL_DEBT").getLastYear()));
	result.put("NOTE8_FACTOR5_CASH_OVER_TOTAL_ASSETS", helper.getFork("SHI_CASH_OVER_TOTAL_ASSETS",get(result, "CASH_OVER_TOTAL_ASSETS").getLastYear()));
	
	result.put("NOTE20_FACTOR1_SALES", helper.getIndice("CONVERT_8_20", result.get("NOTE8_FACTOR1_SALES")));
	result.put("NOTE20_FACTOR1_SIZE_OF_FLEET", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR1_SIZE_OF_FLEET")));
	result.put("NOTE20_FACTOR2_FLEET_AGE", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR2_FLEET_AGE")));
	result.put("NOTE20_FACTOR2_EBIT_MARGIN", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR2_EBIT_MARGIN")));
	result.put("NOTE20_FACTOR3_RCF_OVER_NET_DEBT", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR3_RCF_OVER_NET_DEBT")));
	result.put("NOTE20_FACTOR3_ROA", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR3_ROA")));
	result.put("NOTE20_FACTOR3_LONG_TERM_CONTRACTS", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR3_LONG_TERM_CONTRACTS")));
	result.put("NOTE20_FACTOR4_DEBT_OVER_EBITDA", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR4_DEBT_OVER_EBITDA")));
	result.put("NOTE20_FACTOR4_EBIT_OVER_INTERESTS", helper.getIndice("CONVERT_8_20", getF(result, "NOTE8_FACTOR4_EBIT_OVER_INTERESTS")));
	result.put("NOTE20_FACTOR5_FCF_OVER_TOTAL_DEBT", helper.getIndice("CONVERT_8_20", result.get("NOTE8_FACTOR5_FCF_OVER_TOTAL_DEBT")));
	result.put("NOTE20_FACTOR5_CASH_OVER_TOTAL_ASSETS", helper.getIndice("CONVERT_8_20", result.get("NOTE8_FACTOR5_CASH_OVER_TOTAL_ASSETS")));
	
	result.put("NOTE20_FACTOR1_SIZE_PONDEREE", (getF(result, "NOTE20_FACTOR1_SALES")*0.1F + getF(result, "NOTE20_FACTOR1_SIZE_OF_FLEET")*0.075F)/0.175F);
	result.put("NOTE20_FACTOR2_EFFICIENCY_PROFITABILITY_PONDEREE", (getF(result, "NOTE20_FACTOR2_FLEET_AGE")*0.075F + getF(result, "NOTE20_FACTOR2_EBIT_MARGIN")*0.1F)/0.175F);
	result.put("NOTE20_FACTOR3_LEVERAGE_COVERAGE_PONDEREE", (getF(result, "NOTE20_FACTOR3_RCF_OVER_NET_DEBT")*0.1F + getF(result, "NOTE20_FACTOR3_ROA")*0.05F + getF(result, "NOTE20_FACTOR3_LONG_TERM_CONTRACTS")*0.1F)/0.25F);
	result.put("NOTE20_FACTOR4_FINANCIAL_STRATEGY_PONDEREE", (getF(result, "NOTE20_FACTOR4_DEBT_OVER_EBITDA")*0.125F + getF(result, "NOTE20_FACTOR4_EBIT_OVER_INTERESTS")*0.125F)/0.25F);
	result.put("NOTE20_FACTOR5_FINANCIAL_POLICIES_PONDEREE", (getF(result, "NOTE20_FACTOR5_FCF_OVER_TOTAL_DEBT")*0.075F + getF(result, "NOTE20_FACTOR5_CASH_OVER_TOTAL_ASSETS")*0.075F)/0.15F);
			
	result.put("NOTE_FINALE", (getF(result, "NOTE20_FACTOR1_SIZE_PONDEREE") + getF(result, "NOTE20_FACTOR2_EFFICIENCY_PROFITABILITY_PONDEREE") + getF(result, "NOTE20_FACTOR3_LEVERAGE_COVERAGE_PONDEREE") + getF(result, "NOTE20_FACTOR4_FINANCIAL_STRATEGY_PONDEREE") + getF(result, "NOTE20_FACTOR5_FINANCIAL_POLICIES_PONDEREE"))/5F);
	result.put("NOTE_FINALE_STABILISEE", helper.getFork("EQUIVALENCE_AAA", getF(result, "NOTE_FINALE")).intValue());
		
	result.put("SHI_NOTE_FACTOR1_SIZE", helper.getFork("EQUIVALENCE_AAA_FACTORS", getF(result, "NOTE20_FACTOR1_SIZE_PONDEREE")));
	result.put("SHI_NOTE_FACTOR2_EFFICIENCY_PROFITABILITY", helper.getFork("EQUIVALENCE_AAA_FACTORS", getF(result, "NOTE20_FACTOR2_EFFICIENCY_PROFITABILITY_PONDEREE")));
	result.put("SHI_NOTE_FACTOR3_LEVERAGE_COVERAGE", helper.getFork("EQUIVALENCE_AAA_FACTORS", getF(result, "NOTE20_FACTOR3_LEVERAGE_COVERAGE_PONDEREE")));
	result.put("SHI_NOTE_FACTOR4_FINANCIAL_STRATEGY", helper.getFork("EQUIVALENCE_AAA_FACTORS", getF(result, "NOTE20_FACTOR4_FINANCIAL_STRATEGY_PONDEREE")));
	result.put("SHI_NOTE_FACTOR5_FINANCIAL_POLICIES", helper.getFork("EQUIVALENCE_AAA_FACTORS", getF(result, "NOTE20_FACTOR5_FINANCIAL_POLICIES_PONDEREE")));
end